// <auto-generated />
using System;
using EF_CORE_Training;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_CORE_Training.Migrations
{
    [DbContext(typeof(TrainingContext))]
    [Migration("20220929085956_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EF_CORE_Training.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("EF_CORE_Training.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AuthorAdressId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorAdressId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("EF_CORE_Training.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PublisherAdressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublisherAdressId");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("EF_CORE_Training.Author", b =>
                {
                    b.HasOne("EF_CORE_Training.Adress", "AuthorAdress")
                        .WithMany()
                        .HasForeignKey("AuthorAdressId");

                    b.Navigation("AuthorAdress");
                });

            modelBuilder.Entity("EF_CORE_Training.Publisher", b =>
                {
                    b.HasOne("EF_CORE_Training.Adress", "PublisherAdress")
                        .WithMany()
                        .HasForeignKey("PublisherAdressId");

                    b.Navigation("PublisherAdress");
                });
#pragma warning restore 612, 618
        }
    }
}
